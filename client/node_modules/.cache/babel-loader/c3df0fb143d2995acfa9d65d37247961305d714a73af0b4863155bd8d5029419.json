{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\veranum-system\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport api from '../services/api'; // Asegúrate de que la ruta a tu api sea correcta\n\n// 1. Crear el Contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// 2. Crear el hook personalizado para consumir el contexto (ESTA ES LA PARTE IMPORTANTE)\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// 3. Crear el Proveedor del Contexto\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(() => {\n    // Intentar obtener el usuario del localStorage al cargar\n    try {\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      return null;\n    }\n  });\n  const login = async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    if (response.data.success) {\n      const userData = {\n        nombre: response.data.nombre,\n        token: response.data.token\n      };\n      setUser(userData);\n      // Guardar en localStorage\n      localStorage.setItem('user', JSON.stringify(userData));\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  };\n  const logout = () => {\n    setUser(null);\n    // Limpiar localStorage\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  // El valor que se comparte a través del contexto\n  const value = {\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"l48qJzbXnW8Jl1Djpi3mBU1r1pI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","storedUser","localStorage","getItem","JSON","parse","error","login","credentials","response","post","data","success","userData","nombre","token","setItem","stringify","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/David/Desktop/veranum-system/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\nimport api from '../services/api'; // Asegúrate de que la ruta a tu api sea correcta\r\n\r\n// 1. Crear el Contexto\r\nconst AuthContext = createContext(null);\r\n\r\n// 2. Crear el hook personalizado para consumir el contexto (ESTA ES LA PARTE IMPORTANTE)\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\n// 3. Crear el Proveedor del Contexto\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(() => {\r\n        // Intentar obtener el usuario del localStorage al cargar\r\n        try {\r\n            const storedUser = localStorage.getItem('user');\r\n            return storedUser ? JSON.parse(storedUser) : null;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    const login = async (credentials) => {\r\n        const response = await api.post('/auth/login', credentials);\r\n        if (response.data.success) {\r\n            const userData = {\r\n                nombre: response.data.nombre,\r\n                token: response.data.token\r\n            };\r\n            setUser(userData);\r\n            // Guardar en localStorage\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n            localStorage.setItem('token', response.data.token);\r\n        }\r\n        return response.data;\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        // Limpiar localStorage\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    // El valor que se comparte a través del contexto\r\n    const value = {\r\n        user,\r\n        login,\r\n        logout\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,OAAON,UAAU,CAACI,WAAW,CAAC;AAClC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACnC;IACA,IAAI;MACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;IACrD,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZ,OAAO,IAAI;IACf;EACJ,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;IACjC,MAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;IAC3D,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MACvB,MAAMC,QAAQ,GAAG;QACbC,MAAM,EAAEL,QAAQ,CAACE,IAAI,CAACG,MAAM;QAC5BC,KAAK,EAAEN,QAAQ,CAACE,IAAI,CAACI;MACzB,CAAC;MACDf,OAAO,CAACa,QAAQ,CAAC;MACjB;MACAX,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACJ,QAAQ,CAAC,CAAC;MACtDX,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACE,IAAI,CAACI,KAAK,CAAC;IACtD;IACA,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACjBlB,OAAO,CAAC,IAAI,CAAC;IACb;IACAE,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC;IAC/BjB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC;;EAED;EACA,MAAMC,KAAK,GAAG;IACVrB,IAAI;IACJQ,KAAK;IACLW;EACJ,CAAC;EAED,oBACI1B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EAC9BA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC3B,GAAA,CA7CWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}