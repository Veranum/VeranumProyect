{"ast":null,"code":"// src/services/adminService.js\nimport api from './api';\n\n// --- RESERVATIONS MANAGEMENT ---\n\nexport const getReservas = async () => {\n  const response = await api.get('/reservas/admin/all');\n  return response.data;\n};\nexport const updateReserva = async (id, data) => {\n  const response = await api.put(`/reservas/admin/${id}`, data);\n  return response.data;\n};\nexport const deleteReserva = async id => {\n  const response = await api.delete(`/reservas/admin/${id}`);\n  return response.data;\n};\nexport const createReservaAdmin = async data => {\n  const response = await api.post('/reservas/admin', data);\n  return response.data;\n};\n\n// --- HABITACIONES MANAGEMENT ---\n\nexport const createHabitacion = async data => {\n  // La ruta POST a la raíz es correcta para la creación\n  const response = await api.post('/habitaciones', data);\n  return response.data;\n};\nexport const updateHabitacion = async (id, data) => {\n  // --- CORRECCIÓN: La ruta de actualización para admin debe ser consistente ---\n  // Si tus rutas de admin usan un prefijo, debe ir aquí. Asumiendo que sigue /:id\n  const response = await api.put(`/habitaciones/${id}`, data);\n  return response.data;\n};\nexport const deleteHabitacion = async id => {\n  // --- CORRECCIÓN: La ruta de eliminación para admin debe ser consistente ---\n  const response = await api.delete(`/habitaciones/${id}`);\n  return response.data;\n};\n\n// --- REPORTES ---\nexport const getReporteGeneral = async () => {\n  const response = await api.get('/reportes/general');\n  return response.data;\n};\n\n// --- NUEVA SECCIÓN PARA GESTIÓN DE USUARIOS ---\nexport const getAllUsers = async () => {\n  const response = await api.get('/usuarios/admin/all');\n  return response.data;\n};","map":{"version":3,"names":["api","getReservas","response","get","data","updateReserva","id","put","deleteReserva","delete","createReservaAdmin","post","createHabitacion","updateHabitacion","deleteHabitacion","getReporteGeneral","getAllUsers"],"sources":["C:/Users/David/Desktop/veranum-system/client/src/services/adminService.js"],"sourcesContent":["// src/services/adminService.js\r\nimport api from './api';\r\n\r\n// --- RESERVATIONS MANAGEMENT ---\r\n\r\nexport const getReservas = async () => {\r\n  const response = await api.get('/reservas/admin/all');\r\n  return response.data;\r\n};\r\n\r\nexport const updateReserva = async (id, data) => {\r\n  const response = await api.put(`/reservas/admin/${id}`, data);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteReserva = async (id) => {\r\n  const response = await api.delete(`/reservas/admin/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const createReservaAdmin = async (data) => {\r\n  const response = await api.post('/reservas/admin', data);\r\n  return response.data;\r\n};\r\n\r\n\r\n// --- HABITACIONES MANAGEMENT ---\r\n\r\nexport const createHabitacion = async (data) => {\r\n    // La ruta POST a la raíz es correcta para la creación\r\n    const response = await api.post('/habitaciones', data);\r\n    return response.data;\r\n};\r\n\r\nexport const updateHabitacion = async (id, data) => {\r\n    // --- CORRECCIÓN: La ruta de actualización para admin debe ser consistente ---\r\n    // Si tus rutas de admin usan un prefijo, debe ir aquí. Asumiendo que sigue /:id\r\n    const response = await api.put(`/habitaciones/${id}`, data);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteHabitacion = async (id) => {\r\n    // --- CORRECCIÓN: La ruta de eliminación para admin debe ser consistente ---\r\n    const response = await api.delete(`/habitaciones/${id}`);\r\n    return response.data;\r\n};\r\n\r\n// --- REPORTES ---\r\nexport const getReporteGeneral = async () => {\r\n    const response = await api.get('/reportes/general');\r\n    return response.data;\r\n};\r\n\r\n// --- NUEVA SECCIÓN PARA GESTIÓN DE USUARIOS ---\r\nexport const getAllUsers = async () => {\r\n    const response = await api.get('/usuarios/admin/all');\r\n    return response.data;\r\n};"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEF,IAAI,KAAK;EAC/C,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACO,GAAG,CAAC,mBAAmBD,EAAE,EAAE,EAAEF,IAAI,CAAC;EAC7D,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG,MAAOF,EAAE,IAAK;EACzC,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACS,MAAM,CAAC,mBAAmBH,EAAE,EAAE,CAAC;EAC1D,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAG,MAAON,IAAI,IAAK;EAChD,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACW,IAAI,CAAC,iBAAiB,EAAEP,IAAI,CAAC;EACxD,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAGD;;AAEA,OAAO,MAAMQ,gBAAgB,GAAG,MAAOR,IAAI,IAAK;EAC5C;EACA,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACW,IAAI,CAAC,eAAe,EAAEP,IAAI,CAAC;EACtD,OAAOF,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAG,MAAAA,CAAOP,EAAE,EAAEF,IAAI,KAAK;EAChD;EACA;EACA,MAAMF,QAAQ,GAAG,MAAMF,GAAG,CAACO,GAAG,CAAC,iBAAiBD,EAAE,EAAE,EAAEF,IAAI,CAAC;EAC3D,OAAOF,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,MAAOR,EAAE,IAAK;EAC1C;EACA,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACS,MAAM,CAAC,iBAAiBH,EAAE,EAAE,CAAC;EACxD,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMb,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,mBAAmB,CAAC;EACnD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMd,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,qBAAqB,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}